{"version":3,"file":"static/chunks/pages/[postType]/[slug]-2dd6bdf9e132e892.js","mappings":"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","sources":["webpack://_N_E/?7d3b","webpack://_N_E/./components/Head.tsx","webpack://_N_E/./components/Navigation.tsx","webpack://_N_E/./components/Layout.tsx","webpack://_N_E/./lib/FrontEndUtils.ts","webpack://_N_E/./pages/[postType]/[slug].tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[postType]/[slug]\",\n      function () {\n        return require(\"private-next-pages/[postType]/[slug].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[postType]/[slug]\"])\n      });\n    }\n  ","import NextHead from 'next/head';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { GetHostedPath } from '../lib/FrontEndUtils';\nimport { MetaProps } from '../types/layout';\n\nconst WEBSITE_HOST_URL = process.env.WEBSITE_HOST_URL || \"https://ajaymonga.github.io/general-goods\";\n// const DOMAIN_PATH = process.env.IS_LOCAL === 'FALSE' ? '/general-goods' : \"\";\nconst Head = ({ customMeta }: { customMeta?: MetaProps }): JSX.Element => {\n  const router = useRouter();\n  const meta: MetaProps = {\n    title: \"Ajay's General Goods\",\n    description:\n      'Notes on things which I find interesting.',\n    image: `${WEBSITE_HOST_URL}/images/site-preview.png`,\n    type: 'blog',\n    ...customMeta,\n  };\n\n  return (\n    <NextHead>\n\n      <link rel=\"apple-touch-icon\" sizes=\"76x76\" href={`${GetHostedPath()}/assets/img/favicon.ico`} />\n      <link rel=\"icon\" type=\"image/png\" href={`${GetHostedPath()}/assets/img/favicon.ico`} />\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n      <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />\n\n      <title>{meta.title}</title>\n      <meta content={meta.description} name=\"description\" />\n      <meta property=\"og:url\" content={`${WEBSITE_HOST_URL}${router.asPath}`} />\n      <link rel=\"canonical\" href={`${WEBSITE_HOST_URL}${router.asPath}`} />\n      <meta property=\"og:type\" content={meta.type} />\n      <meta property=\"og:site_name\" content={meta.title} />\n      <meta property=\"og:description\" content={meta.description} />\n      <meta property=\"og:title\" content={meta.title} />\n      <meta property=\"og:image\" content={`/${meta.image}`} />\n      {/* <meta name=\"twitter:card\" content=\"summary_large_image\" /> */}\n      <meta name=\"twitter:title\" content={meta.title} />\n      <meta name=\"twitter:description\" content={meta.description} />\n      <meta name=\"twitter:image\" content={`/${meta.image}`} />\n      {meta.date && (\n        <meta property=\"article:published_time\" content={meta.date} />\n      )}\n    </NextHead>\n  );\n};\n\n\n// const Head = ({ customMeta }: { customMeta?: MetaProps }): JSX.Element => {\n//   const router = useRouter();\n//   const meta: MetaProps = {\n//     title: 'Scattered Bits of Thoughts',\n//     description:\n//       'Notes about various things.',\n//     image: `${WEBSITE_HOST_URL}/images/site-preview.png`,\n//     type: 'website',\n//     ...customMeta,\n//   };\n\n//   return (\n//     <NextHead>\n//       <title>{meta.title}</title>\n//       <meta content={meta.description} name=\"description\" />\n//       <meta property=\"og:url\" content={`${WEBSITE_HOST_URL}${router.asPath}`} />\n//       <link rel=\"canonical\" href={`${WEBSITE_HOST_URL}${router.asPath}`} />\n//       <meta property=\"og:type\" content={meta.type} />\n//       <meta property=\"og:site_name\" content=\"Scattered bits of thoughts\" />\n//       <meta property=\"og:description\" content={meta.description} />\n//       <meta property=\"og:title\" content={meta.title} />\n//       <meta property=\"og:image\" content={meta.image} />\n//       <meta name=\"twitter:card\" content=\"summary_large_image\" />\n//       <meta name=\"twitter:title\" content={meta.title} />\n//       <meta name=\"twitter:description\" content={meta.description} />\n//       <meta name=\"twitter:image\" content={meta.image} />\n//       {meta.date && (\n//         <meta property=\"article:published_time\" content={meta.date} />\n//       )}\n//     </NextHead>\n//   );\n// };\n\nexport default Head;\n","import Link from 'next/link';\nimport React from 'react';\nimport { GetHostedPath } from '../lib/FrontEndUtils';\n\nconst Navigation = (): JSX.Element => {\n  return (\n    <>\n{/* NAVBAR */}\n<nav className=\"topnav navbar navbar-expand-lg navbar-light bg-white fixed-top\">\n<div className=\"container\">\n\t<div>\n\t<a className=\"navbar-brand\" href={`${GetHostedPath()}`}>\n\t\t<strong>Ajay&apos;s General Goods</strong>\n\t\t<p><small className=\"text-muted\">A little bit of this, a little bit of that...</small></p>\n\t</a>\n\t</div>\n\t<button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t<span className=\"navbar-toggler-icon\"></span>\n\t</button>\n\t<div className=\"navbar-collapse collapse\" id=\"navbarColor02\">\n\t\t<ul className=\"navbar-nav mr-auto d-flex align-items-center\">\n\t\t\t{/* <li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./index.html\">Intro <span className=\"sr-only\">(current)</span></a>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./article.html\">Culture</a>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./article.html\">Tech</a>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./article.html\">Politics</a>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./article.html\">Health</a>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./article.html\">Collections</a>\n\t\t\t</li>            \n\t\t\t<li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./about.html\">About</a>\n\t\t\t</li> */}\n\t\t\t{/* <li className=\"nav-item\">\n\t\t\t<a className=\"nav-link\" href=\"./docs.html\">Template <span className=\"badge badge-secondary\">docs</span></a>\n\t\t\t</li> */}\n\t\t</ul>\n\t\t{/* <ul className=\"navbar-nav ml-auto d-flex align-items-center\">\n\t\t\t<li className=\"nav-item highlight\">\n\t\t\t<a className=\"nav-link\" href=\"https://www.wowthemes.net/mundana-free-html-bootstrap-template/\">Get this Theme</a>\n\t\t\t</li>\n\t\t</ul> */}\n\t</div>\n</div>\n</nav>\n{/* End Navbar */}\n    </>\n  );\n};\n\n\n// const Navigation = (): JSX.Element => {\n//   return (\n//     <>\n//       <hr className=\"h-0.5 bg-slate-300\" />\n//       <nav>\n//         <div className=\"flex items-center justify-between py-2\">\n//           <Link href=\"/\">\n//             Home\n//           </Link>\n//           <Link href=\"/pinned\">\n//             Pinned\n//           </Link>\n//           <Link href=\"/about\">\n//             About\n//           </Link>\n//         </div>\n//       </nav>\n//       <hr className=\"h-0.5 bg-slate-300\" />\n//     </>\n//   );\n// };\n\nexport default Navigation;\n","import React from 'react';\nimport { MetaProps } from '../types/layout';\nimport Head from './Head';\nimport Navigation from './Navigation';\nimport ThemeSwitch from './ThemeSwitch';\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  customMeta?: MetaProps;\n};\n\n\nconst Layout = ({ children, customMeta }: LayoutProps): JSX.Element => {\n  return (\n    <>\n      <Head customMeta={customMeta} />\n      <header>\n        <Navigation />\n        {/* <ThemeSwitch /> */}\n      </header>\n      <main>\n        <div className=\"max-w-5xl px-8 py-4 mx-auto\">{children}</div>\n      </main>\n    </>\n  );\n};\n\n\n// const Layout = ({ children, customMeta }: LayoutProps): JSX.Element => {\n//   return (\n//     <>\n//       <Head customMeta={customMeta} />\n//       <header>\n//         <div className='text-center mt-16 mb-2'>\n//           <h1 className= 'mb-0'>Scattered Bits of Thoughts</h1>\n//           <h3>...and scattered thoughts of bits</h3>\n//         </div>\n//         <div className=\"max-w-xl px-8 mx-auto\">\n//           {/* <div className=\"flex items-center justify-between py-6\"> */}\n//             <Navigation />\n//             <ThemeSwitch />\n//           {/* </div> */}\n//         </div>\n//       </header>\n//       <main>\n//         <div className=\"max-w-5xl px-8 py-4 mx-auto\">{children}</div>\n//       </main>\n//     </>\n//   );\n// };\n\nexport default Layout;\n","export function GetHostedPath(): string {\n  if (process.env.IS_LOCAL === 'FALSE') {\n    return \"/general-goods\";\n  } else {\n    return \"\"\n  }\n}","import { format, parseISO } from 'date-fns';\nimport fs from 'fs';\nimport matter from 'gray-matter';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote';\nimport { serialize } from 'next-mdx-remote/serialize';\n// import Head from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport path from 'path';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\nimport remarkDirective from 'remark-directive'\nimport Layout from '../../components/Layout';\nimport { MetaProps } from '../../types/layout';\nimport { PostType } from '../../types/post';\nimport { GetBaseDir, GetBlogPostsDir, GetCodePostsDir, GetFilesInDir, GetPostsPaths } from '../../utils/mdxUtils';\n\nimport { bundleMDX } from 'mdx-bundler';\nimport { getMDXComponent } from 'mdx-bundler/client'\nimport { useMemo } from 'react';\nimport { remarkCodeHike } from \"@code-hike/mdx\"\n// import darkTheme from \"shiki/themes/github-dark.json\"\n// import lightTheme from \"shiki/themes/github-light.json\"\nimport lightTheme from \"shiki/themes/light-plus.json\"\n\nimport { visit } from 'unist-util-visit'\nimport { h } from 'hastscript'\nimport {getPostBySlug } from '../../lib/api';\nimport { GetHostedPath } from '../../lib/FrontEndUtils';\nimport Head from '../../components/Head';\n\n// import '../../styles/post.css'\n\n// Custom components/renderers to pass to MDX.\n// Since the MDX files aren't loaded by webpack, they have no knowledge of how\n// to handle import statements. Instead, you must include components in scope\n// here.\nconst components = {\n  Head,\n  Image,\n  Link,\n};\n\n\nconst mainRelatedDivStyle = {\n  height: '150px',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat'\n};\n\ntype PostPageProps = {\n  // source: MDXRemoteSerializeResult;\n  source: any,\n  frontMatter: PostType;\n};\nconst WEBSITE_HOST_URL = process.env.WEBSITE_HOST_URL;\n\nconst PostPage = ({ source, frontMatter }: PostPageProps): JSX.Element => {\n  // console.trace(frontMatter);\n  const customMeta: MetaProps = {\n    title: `${frontMatter.title} - Ajay Monga`,\n    description: frontMatter.description,\n    image: `${WEBSITE_HOST_URL}${frontMatter.image}`,\n    date: frontMatter.date,\n    type: 'article',\n  };\n  const Component = useMemo(() => getMDXComponent(source), [source]);\n  return (\n    <Layout customMeta={customMeta}>\n      <div className=\"container\">\n        <div className=\"jumbotron jumbotron-fluid mb-3 pl-0 pt-0 pb-0 bg-white position-relative\">\n          <div className=\"h-100 tofront\">\n            <div className=\"row justify-content-between\">\n              <div className=\"col-md-6 pt-6 pb-6 pr-6 align-self-center\">\n                <p className=\"text-uppercase font-weight-bold\">\n                  <a className=\"text-danger\" href=\"./category.html\">Stories</a>\n                </p>\n                <h1 className=\"display-4 secondfont mb-3 font-weight-bold\">{frontMatter.title}</h1>\n                <p className=\"mb-3\">\n                  {frontMatter.description}\n                </p>\n                <div className=\"d-flex align-items-center\">\n                  <img className=\"rounded-circle\" src={`${GetHostedPath()}/assets/img/sal.jpg`} width=\"70\" />\n                  <small className=\"ml-2\">{frontMatter.author} <span className=\"text-muted d-block\">{frontMatter.date}</span>\n                  </small>\n                </div>\n              </div>\n              {frontMatter['image'] && \n              <div className=\"col-md-6 pr-0\">\n                <img src={`${GetHostedPath()}/assets/img/${frontMatter.image}`} />\n              </div>\n}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container pt-4 pb-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-12 col-lg-8\">\n            <article className=\"article-post\">\n            <Component\n            components={{\n              Head,\n              Image,\n              Link,\n            }} />\n            </article>\n{(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0) &&\n            <div className=\"container pt-4 pb-4\">\n              <h5 className=\"font-weight-bold spanborder\"><span>Read next</span></h5>\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n\n\n                  <div className=\"card border-0 mb-4 box-shadow h-xl-300\">\n                    {(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0) && <div style = {{height: '150px', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundImage: `url(${GetHostedPath()}/assets/img/${frontMatter['relatedPosts'][0]['image']})`}}></div>}\n                    <div className=\"card-body px-0 pb-0 d-flex flex-column align-items-start\">\n                      <h2 className=\"h4 font-weight-bold\">\n                        {(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0) && <a className=\"text-dark\" href={`${GetHostedPath()}/blog/${frontMatter['relatedPosts'][0]['slug']}`}>{frontMatter['relatedPosts'] && frontMatter['relatedPosts'][0]['title']}</a>}\n                      </h2>\n                      {(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0)&&<p className=\"card-text\">\n                      {frontMatter['relatedPosts'] && frontMatter['relatedPosts'][0]['description']}\n                      </p>}\n                      <div>\n                        <small className=\"d-block\"><a className=\"text-muted\" href=\"./author.html\">{(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0) && frontMatter['relatedPosts'][0]['author']}</a></small>\n                        <small className=\"text-muted\">{(frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 0) && frontMatter['relatedPosts'][0]['date']}</small>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n\n\n                <div className=\"col-lg-6\">\n                  <div className=\"flex-md-row mb-4 box-shadow h-xl-300\">\n                    {frontMatter['relatedPosts'] && frontMatter['relatedPosts'].length > 1 && (frontMatter['relatedPosts'].slice(1)).map((post:PostType) => {\n                      return <>\n                      <div className=\"mb-3 d-flex align-items-center\">\n                      <img height=\"80\" src={`${GetHostedPath()}/assets/img/${post.image}`} />\n                        <div className=\"pl-3\">\n                          <h2 className=\"mb-2 h6 font-weight-bold\">\n                            <a className=\"text-dark\" href={`/post/${post.slug}`}>{post.title}</a>\n                          </h2>\n                          <div className=\"card-text text-muted small\">\n                            {post.author}\n                          </div>\n                          <small className=\"text-muted\">{post.date}</small>\n                        </div>\n                    </div>\n                      </>\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n}\n          </div>\n        </div>\n      </div>\n\n    </Layout>\n  );\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params: {slug, postType} }) => {\n    // console.trace(postType, slug);\n    let filesDirPath = GetBlogPostsDir();\n\n    if(postType === 'code') {\n        filesDirPath = GetCodePostsDir();\n    }\n//   const filesDirPath = GetBlogPostsDir();\n  const postFilePath = path.join(filesDirPath, `${slug}.mdx`);\n  // console.trace(postFilePath);\n  const source = fs.readFileSync(postFilePath, 'utf-8');\n\n  // const { content, data } = matter(source);\n\n  // const mdxSource = await serialize(content, {\n  //   // Optionally pass remark/rehype plugins\n  //   mdxOptions: {\n  //     remarkPlugins: [remarkGfm],\n  //     rehypePlugins: [\n  //       rehypeSlug,\n  //       rehypeCodeTitles,\n  //       rehypePrism,\n  //       [\n  //         rehypeAutolinkHeadings,\n  //         {\n  //           properties: {\n  //             className: ['anchor'],\n  //           },\n  //         },\n  //       ],\n  //     ],\n  //     format: 'mdx',\n  //   },\n  //   scope: data,\n  // });\n\n  // This plugin is an example to let users write HTML with directives.\n  // It’s informative but rather useless.\n  // See below for others examples.\n  /** @type {import('unified').Plugin<[], import('mdast').Root>} */\n  const myRemarkPlugin = () => {\n    return (tree) => {\n      visit(tree, (node) => {\n        if (\n          node.type === 'textDirective' ||\n          node.type === 'leafDirective' ||\n          node.type === 'containerDirective'\n        ) {\n          const data = node.data || (node.data = {})\n          const hast = h(node.name, node.attributes)\n\n          data.hName = hast.tagName\n          data.hProperties = hast.properties\n        }\n      })\n    }\n  }\n\n  const { code, frontmatter } = await bundleMDX({\n    source: source,\n    mdxOptions(options, fm) {\n      // this is the recommended way to add custom remark/rehype plugins:\n      // The syntax might look weird, but it protects you in case we add/remove\n      // plugins in the future.\n      options.remarkPlugins = [...(options.remarkPlugins ?? []),\n      [remarkGfm],\n      [remarkCodeHike, {\n        lineNumbers: true,\n        showCopyButton: true,\n        theme: lightTheme\n      }],\n      [remarkDirective],\n      [myRemarkPlugin]\n      ]\n      // options.rehypePlugins = [...(options.rehypePlugins ?? []), [rehypeHighlight]]\n\n      return options\n    },\n  });\n\n  const relatedPostsSlugs = frontmatter['relatedPosts'] || [];\n  const relatedPosts = relatedPostsSlugs.map((slug:string) => {\n    \n    return getPostBySlug(slug, false, ['title', 'description', 'author', 'date', 'image', 'slug']);\n  });\n  frontmatter['relatedPosts'] = relatedPosts;\n  // console.log(frontmatter);\n\n  return {\n    props: {\n      source: code,\n      frontMatter: frontmatter,\n    },\n  };\n};\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    const postFiles = GetFilesInDir(GetBlogPostsDir()).filter((path) => /\\.mdx?$/.test(path));\n    const blogPosts = postFiles\n        .map((path) => path.replace(/\\.mdx?$/, ''))\n        .map((slug) => { return { params: {postType: 'blog', slug: path.parse(slug).name} } });\n\n    const codeFiles = GetFilesInDir(GetCodePostsDir()).filter((path) => /\\.mdx?$/.test(path));\n    const codePosts = codeFiles\n        .map((path) => path.replace(/\\.mdx?$/, ''))\n        .map((slug) => { return { params: { postType: 'code', slug: path.parse(slug).name} } });\n    const paths = blogPosts.concat(codePosts);\n    // console.trace(paths);\n    return {\n        paths,\n        fallback: false,\n    };\n};\n\nexport default PostPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","WEBSITE_HOST_URL","process","env","Head","customMeta","param","router","useRouter","meta","title","description","image","concat","type","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","NextHead","jsx","link","rel","sizes","href","GetHostedPath","httpEquiv","content","name","property","asPath","date","__webpack_exports__","Navigation","jsx_runtime","Fragment","nav","className","div","a","strong","p","small","button","data-toggle","data-target","aria-controls","aria-expanded","aria-label","span","id","ul","Layout","children","header","main","components_Layout","IS_LOCAL","Image","Link","PostPage","source","frontMatter","Component","useMemo","getMDXComponent","h1","img","src","width","author","article","components","length","h5","style","height","backgroundSize","backgroundRepeat","backgroundImage","h2","slice","map","post","slug"],"sourceRoot":""}